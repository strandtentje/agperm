{
	validname = TextField(pattern = "^[\\w|0-9|_]{2,60}$", required = true) {
		failure->FailCheck(); successful->StubService();
	};

	validwildcarded = TextField(pattern = "^[\\w|0-9|_|\\*]{2,60}$", required = true) {
		failure->FailCheck(); successful->StubService();
	};

	groups = DataReader(f"queries/GetGroups.sql", connection = "agperm") {
		iterator->Template(f"templates/groupitem.html");
	};

	instances = {
		usergroups = HttpMethod() {
			get->Template(f"templates/usergroups.html") {
				users->DataReader(f"queries/GetUsers.sql", connection = "agperm") {
					iterator->Template(f"templates/useritem.html");
				};
				groups->groups;
				memberships->DataReader(f"queries/GetMemberships.sql", connection = "agperm") {
					iterator->Template(f"templates/memberitem.html");
				};
			};
			post->Dir() {
				default->Template(f"templates/immutable.html");
				add->Check() {
					subject->WwwForm(fieldlist = ["username", "groupname"]) {
						username->validname;
						groupname->validname;
					};
					failure->Template(f"templates/incomplete.html");
					successful->DataWriter(f"queries/SetMembership.sql", connection = "agperm") {
						changed_1->Template(f"templates/added.html");
						changed_0->Template(f"templates/notadded.html");
					};
				};
				remove->Check() {
					subject->WwwForm(fieldlist = ["id"]) {
						id->NumberField(required = true) {
							failure->FailCheck(); successful->StubService();
						};
						mapped->CheckCheck() {
							failure->Template(f"templates/incomplete.html");
							successful->DataWriter(f"queries/ClearMembership.sql", connection = "agperm") {
								changed_1->Template(f"templates/cleared.html");
								changed_0->Template(f"templates/uncleared.html")
							};
						};
					};
				};
			};
		};

		groupgrants = HttpMethod() {
			get->Template(f"templates/groupgrants.html") {
				groups->groups;
				resources->DataReader(f"queries/GetResources.sql", connection = "agperm") {
					iterator->Template(f"templates/resourceitem.html");
				};
				actions->DataReader(f"queries/GetActions.sql", connection = "agperm") {
					iterator->Template(f"templates/actionitem.html");
				};
				memberships->DataReader(f"queries/GetGrants.sql", connection = "agperm") {
					iterator->Template(f"templates/grantitem.html");
				};
			};
			post->Dir() {
				default->Template(f"templates/immutable.html");
				add->Check() {
					subject->WwwForm(fieldlist = ["groupname", "resource", "subresource", "action"]) {
						groupname->validwildcarded;
						resource->validwildcarded;
						action->validwildcarded;
						subresource->validwildcarded;
					};
					failure->Template(f"templates/incomplete.html");
					successful->DataWriter(f"queries/SetGrant.sql", connection = "agperm") {
						changed_0->Template(f"templates/notadded.html");
						changed_1->Template(f"templates/added.html");
					};
				};
				remove->Check()  {
					subject->WwwForm(fieldlist = ["id"]) {
						id->NumberField(required = true) {
							failure->FailCheck(); successful->StubService();
						};
						mapped->CheckCheck() {
							failure->Template(f"templates/incomplete.html");
							successful->DataWriter(f"queries/ClearGrant.sql", connection = "agperm") {
								changed_0->Template(f"templates/uncleared.html");
								changed_1->Template(f"templates/cleared.html");
							};
						};
					};
				};
			};
		};
	};
}