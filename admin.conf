{
	validname = TextField(pattern = "^[\\w|0-9|\\-|_|\\.]{2,60}$", required = true) {
		failure->FailCheck(); successful->StubService();
	};

	validwildcarded = TextField(pattern = "^(\\*|[\\w|0-9|\\-|_|\\.]{2,60})$", required = true) {
		failure->FailCheck(); successful->StubService();
	};

	groups = DataReader(f"queries/GetGroups.sql", connection = "agperm") {
		iterator->Translation(f"templates-%s/groupitem.html", locales = ["en", "nl"]);
	};

	instances = {
		usergroups = HttpMethod() {
			get->Translation(f"templates-%s/usergroups.html", locales = ["en", "nl"]) {
				users->DataReader(f"queries/GetUsers.sql", connection = "agperm") {
					iterator->Translation(f"templates-%s/useritem.html", locales = ["en", "nl"]);
				};
				groups->groups;
				memberships->DataReader(f"queries/GetMemberships.sql", connection = "agperm") {
					iterator->Translation(f"templates-%s/memberitem.html", locales = ["en", "nl"]);
				};
			};
			post->Dir() {
				default->Translation(f"templates-%s/immutable.html", locales = ["en", "nl"]);
				add->Check() {
					subject->WwwForm(fieldlist = ["username", "groupname"]) {
						username->validname;
						groupname->validname;
						mapped->CheckCheck() {
							failure->Translation(f"templates-%s/incomplete.html", locales = ["en", "nl"]);
							successful->DataWriter(f"queries/SetMembership.sql", connection = "agperm") {
								changed_1->Translation(f"templates-%s/added.html", locales = ["en", "nl"]);
								changed_0->Translation(f"templates-%s/notadded.html", locales = ["en", "nl"]);
							};
						};
					};
				};
				remove->Check() {
					subject->WwwForm(fieldlist = ["id"]) {
						id->NumberField(required = true) {
							failure->FailCheck(); successful->StubService();
						};
						mapped->CheckCheck() {
							failure->Translation(f"templates-%s/incomplete.html", locales = ["en", "nl"]);
							successful->DataWriter(f"queries/ClearMembership.sql", connection = "agperm") {
								changed_1->Translation(f"templates-%s/cleared.html", locales = ["en", "nl"]);
								changed_0->Translation(f"templates-%s/uncleared.html", locales = ["en", "nl"])
							};
						};
					};
				};
			};
		};

		groupgrants = HttpMethod() {
			get->Translation(f"templates-%s/groupgrants.html", locales = ["en", "nl"]) {
				groups->groups;
				resources->DataReader(f"queries/GetResources.sql", connection = "agperm") {
					iterator->Translation(f"templates-%s/resourceitem.html", locales = ["en", "nl"]);
				};
				actions->DataReader(f"queries/GetActions.sql", connection = "agperm") {
					iterator->Translation(f"templates-%s/actionitem.html", locales = ["en", "nl"]);
				};
				groupgrants->DataReader(f"queries/GetGrants.sql", connection = "agperm") {
					iterator->Translation(f"templates-%s/grantitem.html", locales = ["en", "nl"]);
				};
			};
			post->Dir() {
				default->Translation(f"templates-%s/immutable.html", locales = ["en", "nl"]);
				add->Check() {
					subject->WwwForm(fieldlist = ["groupname", "resource", "subresource", "action"]) {
						groupname->validwildcarded;
						resource->validwildcarded;
						action->validwildcarded;
						subresource->validwildcarded;
						mapped->CheckCheck() {
							failure->Translation(f"templates-%s/incomplete.html", locales = ["en", "nl"]);
							successful->Log(variablenames = ["groupname", "resource", "subresource", "action"]) {
								continue-><f"groupgrant.conf@add">;
							};
						};
					};
				};
				remove->Check()  {
					subject->WwwForm(fieldlist = ["id"]) {
						id->NumberField(required = true) {
							failure->FailCheck(); successful->StubService();
						};
						mapped->CheckCheck() {
							failure->Translation(f"templates-%s/incomplete.html", locales = ["en", "nl"]);
							successful->Log(variablenames = ["id"]) {
								continue-><f"groupgrant.conf@removebyid">;
							};
						};
					};
				};
			};
		};

		itemgrant = <f"groupgrant.conf@get"> {
			failure->Translation(f"templates-%s/itemgrant.html", locales = ["en", "nl"]);
			successful->Translation(f"templates-%s/itemdeny.html", locales = ["en", "nl"]);
		};
	};
}
